/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'application'
}

group = 'ai.safekids.desktop'
version = '1.0.0-SNAPSHOT'
description = 'http-proxy'
java.sourceCompatibility = JavaVersion.VERSION_1_8

application {
    mainClass.set(project.hasProperty("mainClass") ? project.getProperty("mainClass") : "ai.safekids.httpproxy.NitmProxy")
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:deprecation', '-Xlint:unchecked']
}

task debug(type: JavaExec) {
    mkdir("debug/logs")
    dependencies {}
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'ai.safekids.httpproxy.NitmProxy'
    jvmArgs = ["-javaagent:debug/jSSLKeyLog.jar=debug/logs/sslkeys.log",
               "-Dlogback.configurationFile=debug/logger_debug.xml",
               "-Dcheckstyle.skip",
               "-Dcom.sun.net.ssl.checkRevocation=false"]
    args = ["-tls=TLSv1.2,TLSv1.3", "-maxlength=100000000"]
}

task cert(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'ai.safekids.httpproxy.CertGenerator'
}

repositories {
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}

dependencies {
    api 'io.netty:netty-all:4.1.86.Final'
    api 'io.netty:netty-tcnative-boringssl-static:2.0.54.Final'
    api 'com.google.guava:guava:31.1-jre'
    api 'ch.qos.logback:logback-classic:1.4.5'
    api 'org.bouncycastle:bcpkix-jdk15to18:1.72'
    api 'commons-cli:commons-cli:1.5.0'
    api 'org.assertj:assertj-core:3.23.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.10.0'
    compileOnly 'org.mortbay.jetty.alpn:jetty-alpn-agent:2.0.10'
    compileOnly 'com.puppycrawl.tools:checkstyle:9.2.1'
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/safekids-ai/http-proxy-java")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GIT_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GIT_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
